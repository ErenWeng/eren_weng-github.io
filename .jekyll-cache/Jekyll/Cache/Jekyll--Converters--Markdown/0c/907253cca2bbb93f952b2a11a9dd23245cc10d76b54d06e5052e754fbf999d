I"<p>剛開始看到符號時，可能會猜測這是什麼有特殊功能的變數嗎？或經過變異的字串？又或是什麼神奇的Ruby黑魔法呢？</p>

<p>Anyway，RTFM first。</p>

<h2 id="在ruby的世界中符號是什麼-what-is-a-symbol-in-rubys-world">在Ruby的世界中符號是什麼？ What is a Symbol in Ruby’s world?</h2>

<blockquote>
  <p>Symbol objects represent names inside the Ruby interpreter. They are generated using the :name and :”string” literals syntax…… . The same Symbol object will be created for a given name or string for the duration of a program’s execution, regardless of the context or meaning of that name. ……<a href="https://ruby-doc.org/core-2.7.0/Symbol.html">ruby-doc.org/Symbol</a></p>
</blockquote>

<p>在Ruby的世界裡，Symbol的語法是使用冒號加上某個給定的 :名字 或是 :”字串” 。然而Ruby並不在乎後面的名稱意義，只是在創建該 Symbol 這個物件時附帶上那個被給定的命名。</p>

<blockquote>
  <p>A symbol looks like a variable name but it’s prefixed with a colon. ……You don’t have to pre-declare a symbol and they are guaranteed to be unique. There’s no need to assign some kind of value to a symbol… . Ruby also guarantees that no matter where it appears in your program, a particular symbol will have the same value.
<br />
A Symbol is the most basic Ruby object you can create. It’s just a name and an internal ID. Symbols are useful because a given symbol name refers to the same object throughout a Ruby program. ……you can consider the colon to mean “thing named” so :id is “the thing named id.”
<a href="http://rubylearning.com/satishtalim/ruby_symbols.html">Ref</a></p>
</blockquote>

<p>http://rubylearning.com/satishtalim/ruby_symbols.html</p>
:ET